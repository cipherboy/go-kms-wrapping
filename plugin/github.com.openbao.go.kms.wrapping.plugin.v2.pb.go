// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: plugin/github.com.openbao.go.kms.wrapping.plugin.v2.proto

package plugin

import (
	v2 "github.com/openbao/go-kms-wrapping/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypeRequest) Reset() {
	*x = TypeRequest{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeRequest) ProtoMessage() {}

func (x *TypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeRequest.ProtoReflect.Descriptor instead.
func (*TypeRequest) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{0}
}

type TypeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypeResponse) Reset() {
	*x = TypeResponse{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeResponse) ProtoMessage() {}

func (x *TypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeResponse.ProtoReflect.Descriptor instead.
func (*TypeResponse) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{1}
}

func (x *TypeResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type KeyIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyIdRequest) Reset() {
	*x = KeyIdRequest{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyIdRequest) ProtoMessage() {}

func (x *KeyIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyIdRequest.ProtoReflect.Descriptor instead.
func (*KeyIdRequest) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{2}
}

type KeyIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KeyId         string                 `protobuf:"bytes,10,opt,name=key_id,proto3" json:"key_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyIdResponse) Reset() {
	*x = KeyIdResponse{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyIdResponse) ProtoMessage() {}

func (x *KeyIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyIdResponse.ProtoReflect.Descriptor instead.
func (*KeyIdResponse) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{3}
}

func (x *KeyIdResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

type SetConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       *v2.Options            `protobuf:"bytes,20,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetConfigRequest) Reset() {
	*x = SetConfigRequest{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigRequest) ProtoMessage() {}

func (x *SetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigRequest.ProtoReflect.Descriptor instead.
func (*SetConfigRequest) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{4}
}

func (x *SetConfigRequest) GetOptions() *v2.Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type SetConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WrapperConfig *v2.WrapperConfig      `protobuf:"bytes,10,opt,name=wrapper_config,json=wrapperConfig,proto3" json:"wrapper_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetConfigResponse) Reset() {
	*x = SetConfigResponse{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigResponse) ProtoMessage() {}

func (x *SetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigResponse.ProtoReflect.Descriptor instead.
func (*SetConfigResponse) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{5}
}

func (x *SetConfigResponse) GetWrapperConfig() *v2.WrapperConfig {
	if x != nil {
		return x.WrapperConfig
	}
	return nil
}

type EncryptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plaintext     []byte                 `protobuf:"bytes,10,opt,name=plaintext,proto3" json:"plaintext,omitempty"`
	Options       *v2.Options            `protobuf:"bytes,20,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncryptRequest) Reset() {
	*x = EncryptRequest{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptRequest) ProtoMessage() {}

func (x *EncryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptRequest.ProtoReflect.Descriptor instead.
func (*EncryptRequest) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{6}
}

func (x *EncryptRequest) GetPlaintext() []byte {
	if x != nil {
		return x.Plaintext
	}
	return nil
}

func (x *EncryptRequest) GetOptions() *v2.Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type EncryptResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ciphertext    *v2.BlobInfo           `protobuf:"bytes,10,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncryptResponse) Reset() {
	*x = EncryptResponse{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptResponse) ProtoMessage() {}

func (x *EncryptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptResponse.ProtoReflect.Descriptor instead.
func (*EncryptResponse) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{7}
}

func (x *EncryptResponse) GetCiphertext() *v2.BlobInfo {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type DecryptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ciphertext    *v2.BlobInfo           `protobuf:"bytes,10,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	Options       *v2.Options            `protobuf:"bytes,20,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecryptRequest) Reset() {
	*x = DecryptRequest{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptRequest) ProtoMessage() {}

func (x *DecryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptRequest.ProtoReflect.Descriptor instead.
func (*DecryptRequest) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{8}
}

func (x *DecryptRequest) GetCiphertext() *v2.BlobInfo {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

func (x *DecryptRequest) GetOptions() *v2.Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type DecryptResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plaintext     []byte                 `protobuf:"bytes,10,opt,name=plaintext,proto3" json:"plaintext,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecryptResponse) Reset() {
	*x = DecryptResponse{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecryptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptResponse) ProtoMessage() {}

func (x *DecryptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptResponse.ProtoReflect.Descriptor instead.
func (*DecryptResponse) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{9}
}

func (x *DecryptResponse) GetPlaintext() []byte {
	if x != nil {
		return x.Plaintext
	}
	return nil
}

type InitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       *v2.Options            `protobuf:"bytes,20,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitRequest) Reset() {
	*x = InitRequest{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitRequest) ProtoMessage() {}

func (x *InitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitRequest.ProtoReflect.Descriptor instead.
func (*InitRequest) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{10}
}

func (x *InitRequest) GetOptions() *v2.Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type InitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitResponse) Reset() {
	*x = InitResponse{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitResponse) ProtoMessage() {}

func (x *InitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitResponse.ProtoReflect.Descriptor instead.
func (*InitResponse) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{11}
}

type FinalizeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       *v2.Options            `protobuf:"bytes,20,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeRequest) Reset() {
	*x = FinalizeRequest{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeRequest) ProtoMessage() {}

func (x *FinalizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeRequest.ProtoReflect.Descriptor instead.
func (*FinalizeRequest) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{12}
}

func (x *FinalizeRequest) GetOptions() *v2.Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type FinalizeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeResponse) Reset() {
	*x = FinalizeResponse{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeResponse) ProtoMessage() {}

func (x *FinalizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeResponse.ProtoReflect.Descriptor instead.
func (*FinalizeResponse) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{13}
}

type HmacKeyIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HmacKeyIdRequest) Reset() {
	*x = HmacKeyIdRequest{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HmacKeyIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HmacKeyIdRequest) ProtoMessage() {}

func (x *HmacKeyIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HmacKeyIdRequest.ProtoReflect.Descriptor instead.
func (*HmacKeyIdRequest) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{14}
}

type HmacKeyIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KeyId         string                 `protobuf:"bytes,10,opt,name=key_id,proto3" json:"key_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HmacKeyIdResponse) Reset() {
	*x = HmacKeyIdResponse{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HmacKeyIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HmacKeyIdResponse) ProtoMessage() {}

func (x *HmacKeyIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HmacKeyIdResponse.ProtoReflect.Descriptor instead.
func (*HmacKeyIdResponse) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{15}
}

func (x *HmacKeyIdResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

type KeyBytesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyBytesRequest) Reset() {
	*x = KeyBytesRequest{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyBytesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyBytesRequest) ProtoMessage() {}

func (x *KeyBytesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyBytesRequest.ProtoReflect.Descriptor instead.
func (*KeyBytesRequest) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{16}
}

type KeyBytesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KeyBytes      []byte                 `protobuf:"bytes,10,opt,name=key_bytes,proto3" json:"key_bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyBytesResponse) Reset() {
	*x = KeyBytesResponse{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyBytesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyBytesResponse) ProtoMessage() {}

func (x *KeyBytesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyBytesResponse.ProtoReflect.Descriptor instead.
func (*KeyBytesResponse) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{17}
}

func (x *KeyBytesResponse) GetKeyBytes() []byte {
	if x != nil {
		return x.KeyBytes
	}
	return nil
}

type SignRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       *v2.Options            `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
	Msg           []byte                 `protobuf:"bytes,20,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignRequest) Reset() {
	*x = SignRequest{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRequest) ProtoMessage() {}

func (x *SignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRequest.ProtoReflect.Descriptor instead.
func (*SignRequest) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{18}
}

func (x *SignRequest) GetOptions() *v2.Options {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *SignRequest) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

type SignResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SigInfo       *v2.SigInfo            `protobuf:"bytes,10,opt,name=sig_info,json=sigInfo,proto3" json:"sig_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignResponse) Reset() {
	*x = SignResponse{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignResponse) ProtoMessage() {}

func (x *SignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignResponse.ProtoReflect.Descriptor instead.
func (*SignResponse) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{19}
}

func (x *SignResponse) GetSigInfo() *v2.SigInfo {
	if x != nil {
		return x.SigInfo
	}
	return nil
}

type VerifyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       *v2.Options            `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
	Msg           []byte                 `protobuf:"bytes,20,opt,name=msg,proto3" json:"msg,omitempty"`
	SigInfo       *v2.SigInfo            `protobuf:"bytes,30,opt,name=sig_info,json=sigInfo,proto3" json:"sig_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyRequest) Reset() {
	*x = VerifyRequest{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRequest) ProtoMessage() {}

func (x *VerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRequest.ProtoReflect.Descriptor instead.
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{20}
}

func (x *VerifyRequest) GetOptions() *v2.Options {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *VerifyRequest) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *VerifyRequest) GetSigInfo() *v2.SigInfo {
	if x != nil {
		return x.SigInfo
	}
	return nil
}

type VerifyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Verified      bool                   `protobuf:"varint,10,opt,name=verified,proto3" json:"verified,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyResponse) Reset() {
	*x = VerifyResponse{}
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyResponse) ProtoMessage() {}

func (x *VerifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyResponse.ProtoReflect.Descriptor instead.
func (*VerifyResponse) Descriptor() ([]byte, []int) {
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP(), []int{21}
}

func (x *VerifyResponse) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

var File_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto protoreflect.FileDescriptor

var file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDesc = string([]byte{
	0x0a, 0x39, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b,
	0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2c, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e,
	0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x1a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f,
	0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0d, 0x0a, 0x0b,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x22, 0x0a, 0x0c, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x0e, 0x0a, 0x0c, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x27, 0x0a, 0x0d, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62,
	0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x76, 0x0a, 0x11,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x61, 0x0a, 0x0e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67,
	0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x32, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x7e, 0x0a, 0x0e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x4e, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d,
	0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x68, 0x0a, 0x0f, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f,
	0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x32, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x22, 0xb7,
	0x01, 0x0a, 0x0e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x55, 0x0a, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d,
	0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x69,
	0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x12, 0x4e, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67,
	0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x32, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2f, 0x0a, 0x0f, 0x44, 0x65, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x5d, 0x0a, 0x0b, 0x49, 0x6e, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67,
	0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x32, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x49, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61,
	0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x32, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x12, 0x0a, 0x10, 0x48, 0x6d, 0x61, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x2b, 0x0a, 0x11, 0x48, 0x6d, 0x61, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64,
	0x22, 0x11, 0x0a, 0x0f, 0x4b, 0x65, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x30, 0x0a, 0x10, 0x4b, 0x65, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x22, 0x6f, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d,
	0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x5f, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f,
	0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x32,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x73, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc2, 0x01, 0x0a, 0x0d, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e,
	0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x32, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x4f, 0x0a, 0x08, 0x73,
	0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62,
	0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x73, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2c, 0x0a, 0x0e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x32, 0xd3, 0x09, 0x0a, 0x08, 0x57,
	0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x7d, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x39, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e,
	0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x05, 0x4b, 0x65, 0x79, 0x49, 0x64,
	0x12, 0x3a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61,
	0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4b, 0x65, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x09, 0x53, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e,
	0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e,
	0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x07, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x12, 0x3c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73,
	0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x86, 0x01, 0x0a, 0x07, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x3c, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62,
	0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f,
	0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x04, 0x49, 0x6e,
	0x69, 0x74, 0x12, 0x39, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62,
	0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x08, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b,
	0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d,
	0x73, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x09, 0x48, 0x6d, 0x61, 0x63, 0x4b, 0x65,
	0x79, 0x49, 0x64, 0x12, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x48, 0x6d, 0x61, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x48, 0x6d, 0x61, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32,
	0x2e, 0x4b, 0x65, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2e, 0x67, 0x6f, 0x2e, 0x6b, 0x6d, 0x73, 0x2e, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x4b, 0x65, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f,
	0x70, 0x65, 0x6e, 0x62, 0x61, 0x6f, 0x2f, 0x67, 0x6f, 0x2d, 0x6b, 0x6d, 0x73, 0x2d, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x32, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x3b, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescOnce sync.Once
	file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescData []byte
)

func file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescGZIP() []byte {
	file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescOnce.Do(func() {
		file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDesc), len(file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDesc)))
	})
	return file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDescData
}

var file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_goTypes = []any{
	(*TypeRequest)(nil),       // 0: github.com.openbao.go.kms.wrapping.plugin.v2.TypeRequest
	(*TypeResponse)(nil),      // 1: github.com.openbao.go.kms.wrapping.plugin.v2.TypeResponse
	(*KeyIdRequest)(nil),      // 2: github.com.openbao.go.kms.wrapping.plugin.v2.KeyIdRequest
	(*KeyIdResponse)(nil),     // 3: github.com.openbao.go.kms.wrapping.plugin.v2.KeyIdResponse
	(*SetConfigRequest)(nil),  // 4: github.com.openbao.go.kms.wrapping.plugin.v2.SetConfigRequest
	(*SetConfigResponse)(nil), // 5: github.com.openbao.go.kms.wrapping.plugin.v2.SetConfigResponse
	(*EncryptRequest)(nil),    // 6: github.com.openbao.go.kms.wrapping.plugin.v2.EncryptRequest
	(*EncryptResponse)(nil),   // 7: github.com.openbao.go.kms.wrapping.plugin.v2.EncryptResponse
	(*DecryptRequest)(nil),    // 8: github.com.openbao.go.kms.wrapping.plugin.v2.DecryptRequest
	(*DecryptResponse)(nil),   // 9: github.com.openbao.go.kms.wrapping.plugin.v2.DecryptResponse
	(*InitRequest)(nil),       // 10: github.com.openbao.go.kms.wrapping.plugin.v2.InitRequest
	(*InitResponse)(nil),      // 11: github.com.openbao.go.kms.wrapping.plugin.v2.InitResponse
	(*FinalizeRequest)(nil),   // 12: github.com.openbao.go.kms.wrapping.plugin.v2.FinalizeRequest
	(*FinalizeResponse)(nil),  // 13: github.com.openbao.go.kms.wrapping.plugin.v2.FinalizeResponse
	(*HmacKeyIdRequest)(nil),  // 14: github.com.openbao.go.kms.wrapping.plugin.v2.HmacKeyIdRequest
	(*HmacKeyIdResponse)(nil), // 15: github.com.openbao.go.kms.wrapping.plugin.v2.HmacKeyIdResponse
	(*KeyBytesRequest)(nil),   // 16: github.com.openbao.go.kms.wrapping.plugin.v2.KeyBytesRequest
	(*KeyBytesResponse)(nil),  // 17: github.com.openbao.go.kms.wrapping.plugin.v2.KeyBytesResponse
	(*SignRequest)(nil),       // 18: github.com.openbao.go.kms.wrapping.plugin.v2.SignRequest
	(*SignResponse)(nil),      // 19: github.com.openbao.go.kms.wrapping.plugin.v2.SignResponse
	(*VerifyRequest)(nil),     // 20: github.com.openbao.go.kms.wrapping.plugin.v2.VerifyRequest
	(*VerifyResponse)(nil),    // 21: github.com.openbao.go.kms.wrapping.plugin.v2.VerifyResponse
	(*v2.Options)(nil),        // 22: github.com.openbao.go.kms.wrapping.v2.types.Options
	(*v2.WrapperConfig)(nil),  // 23: github.com.openbao.go.kms.wrapping.v2.types.WrapperConfig
	(*v2.BlobInfo)(nil),       // 24: github.com.openbao.go.kms.wrapping.v2.types.BlobInfo
	(*v2.SigInfo)(nil),        // 25: github.com.openbao.go.kms.wrapping.v2.types.SigInfo
}
var file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_depIdxs = []int32{
	22, // 0: github.com.openbao.go.kms.wrapping.plugin.v2.SetConfigRequest.options:type_name -> github.com.openbao.go.kms.wrapping.v2.types.Options
	23, // 1: github.com.openbao.go.kms.wrapping.plugin.v2.SetConfigResponse.wrapper_config:type_name -> github.com.openbao.go.kms.wrapping.v2.types.WrapperConfig
	22, // 2: github.com.openbao.go.kms.wrapping.plugin.v2.EncryptRequest.options:type_name -> github.com.openbao.go.kms.wrapping.v2.types.Options
	24, // 3: github.com.openbao.go.kms.wrapping.plugin.v2.EncryptResponse.ciphertext:type_name -> github.com.openbao.go.kms.wrapping.v2.types.BlobInfo
	24, // 4: github.com.openbao.go.kms.wrapping.plugin.v2.DecryptRequest.ciphertext:type_name -> github.com.openbao.go.kms.wrapping.v2.types.BlobInfo
	22, // 5: github.com.openbao.go.kms.wrapping.plugin.v2.DecryptRequest.options:type_name -> github.com.openbao.go.kms.wrapping.v2.types.Options
	22, // 6: github.com.openbao.go.kms.wrapping.plugin.v2.InitRequest.options:type_name -> github.com.openbao.go.kms.wrapping.v2.types.Options
	22, // 7: github.com.openbao.go.kms.wrapping.plugin.v2.FinalizeRequest.options:type_name -> github.com.openbao.go.kms.wrapping.v2.types.Options
	22, // 8: github.com.openbao.go.kms.wrapping.plugin.v2.SignRequest.options:type_name -> github.com.openbao.go.kms.wrapping.v2.types.Options
	25, // 9: github.com.openbao.go.kms.wrapping.plugin.v2.SignResponse.sig_info:type_name -> github.com.openbao.go.kms.wrapping.v2.types.SigInfo
	22, // 10: github.com.openbao.go.kms.wrapping.plugin.v2.VerifyRequest.options:type_name -> github.com.openbao.go.kms.wrapping.v2.types.Options
	25, // 11: github.com.openbao.go.kms.wrapping.plugin.v2.VerifyRequest.sig_info:type_name -> github.com.openbao.go.kms.wrapping.v2.types.SigInfo
	0,  // 12: github.com.openbao.go.kms.wrapping.plugin.v2.Wrapping.Type:input_type -> github.com.openbao.go.kms.wrapping.plugin.v2.TypeRequest
	2,  // 13: github.com.openbao.go.kms.wrapping.plugin.v2.Wrapping.KeyId:input_type -> github.com.openbao.go.kms.wrapping.plugin.v2.KeyIdRequest
	4,  // 14: github.com.openbao.go.kms.wrapping.plugin.v2.Wrapping.SetConfig:input_type -> github.com.openbao.go.kms.wrapping.plugin.v2.SetConfigRequest
	6,  // 15: github.com.openbao.go.kms.wrapping.plugin.v2.Wrapping.Encrypt:input_type -> github.com.openbao.go.kms.wrapping.plugin.v2.EncryptRequest
	8,  // 16: github.com.openbao.go.kms.wrapping.plugin.v2.Wrapping.Decrypt:input_type -> github.com.openbao.go.kms.wrapping.plugin.v2.DecryptRequest
	10, // 17: github.com.openbao.go.kms.wrapping.plugin.v2.Wrapping.Init:input_type -> github.com.openbao.go.kms.wrapping.plugin.v2.InitRequest
	12, // 18: github.com.openbao.go.kms.wrapping.plugin.v2.Wrapping.Finalize:input_type -> github.com.openbao.go.kms.wrapping.plugin.v2.FinalizeRequest
	14, // 19: github.com.openbao.go.kms.wrapping.plugin.v2.Wrapping.HmacKeyId:input_type -> github.com.openbao.go.kms.wrapping.plugin.v2.HmacKeyIdRequest
	16, // 20: github.com.openbao.go.kms.wrapping.plugin.v2.Wrapping.KeyBytes:input_type -> github.com.openbao.go.kms.wrapping.plugin.v2.KeyBytesRequest
	1,  // 21: github.com.openbao.go.kms.wrapping.plugin.v2.Wrapping.Type:output_type -> github.com.openbao.go.kms.wrapping.plugin.v2.TypeResponse
	3,  // 22: github.com.openbao.go.kms.wrapping.plugin.v2.Wrapping.KeyId:output_type -> github.com.openbao.go.kms.wrapping.plugin.v2.KeyIdResponse
	5,  // 23: github.com.openbao.go.kms.wrapping.plugin.v2.Wrapping.SetConfig:output_type -> github.com.openbao.go.kms.wrapping.plugin.v2.SetConfigResponse
	7,  // 24: github.com.openbao.go.kms.wrapping.plugin.v2.Wrapping.Encrypt:output_type -> github.com.openbao.go.kms.wrapping.plugin.v2.EncryptResponse
	9,  // 25: github.com.openbao.go.kms.wrapping.plugin.v2.Wrapping.Decrypt:output_type -> github.com.openbao.go.kms.wrapping.plugin.v2.DecryptResponse
	11, // 26: github.com.openbao.go.kms.wrapping.plugin.v2.Wrapping.Init:output_type -> github.com.openbao.go.kms.wrapping.plugin.v2.InitResponse
	13, // 27: github.com.openbao.go.kms.wrapping.plugin.v2.Wrapping.Finalize:output_type -> github.com.openbao.go.kms.wrapping.plugin.v2.FinalizeResponse
	15, // 28: github.com.openbao.go.kms.wrapping.plugin.v2.Wrapping.HmacKeyId:output_type -> github.com.openbao.go.kms.wrapping.plugin.v2.HmacKeyIdResponse
	17, // 29: github.com.openbao.go.kms.wrapping.plugin.v2.Wrapping.KeyBytes:output_type -> github.com.openbao.go.kms.wrapping.plugin.v2.KeyBytesResponse
	21, // [21:30] is the sub-list for method output_type
	12, // [12:21] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_init() }
func file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_init() {
	if File_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDesc), len(file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_goTypes,
		DependencyIndexes: file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_depIdxs,
		MessageInfos:      file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_msgTypes,
	}.Build()
	File_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto = out.File
	file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_goTypes = nil
	file_plugin_github_com_openbao_go_kms_wrapping_plugin_v2_proto_depIdxs = nil
}
